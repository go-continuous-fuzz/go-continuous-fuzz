; Example configuration for go-continuous-fuzz.

; The default location for this file is in 
; ~/.go-continuous-fuzz/go-continuous-fuzz.conf on POSIX OSes,
; $LOCALAPPDATA/Go-continuous-fuzz/go-continuous-fuzz.conf on Windows,
; ~/Library/Application Support/Go-continuous-fuzz/go-continuous-fuzz.conf on Mac OS
; and $home/go-continuous-fuzz/go-continuous-fuzz.conf on Plan9.

[Project]

; Git URL of the project to fuzz.
; Default:
;   project.src-repo =
; Example:
;  For a private GitHub repository:
;   project.src-repo = https://oauth2:<PAT>@github.com/<OWNER>/<REPO>.git
;  For a public GitHub repository:
;   project.src-repo = https://github.com/<OWNER>/<REPO>.git

; Name of the S3 bucket where the seed corpus will be stored.
; Default:
;   project.s3-bucket-name =
; Example:
;   project.s3-bucket-name = corpus-bucket

[Fuzz Options]

; Git repository URL where issues are created for fuzz crashes.
; Default:
;   fuzz.crash-repo =
; Example:
;   fuzz.crash-repo = https://oauth2:<PAT>@github.com/<OWNER>/<REPO>.git

; Package path to fuzz. Setting multiple fuzz.pkgs-path= entries is allowed.
; Default:
;   fuzz.pkgs-path =
; Example (option can be specified multiple times):
;   fuzz.pkgs-path = /path/to/fuzz/pkg
; To fuzz the wtclient package inside watchtower, use the path from the project root:
;   fuzz.pkgs-path = watchtower/wtclient

; Duration between consecutive fuzzing cycles.
; Default:
;   fuzz.sync-frequency = 24h
; Example:
;   fuzz.sync-frequency = 30m

; Number of concurrent fuzzing workers (must be ≥1 and ≤ NumCPU).
; Default:
;   fuzz.num-workers = 1
; Example:
;   fuzz.num-workers = 8

; Whether to run inside a Kubernetes cluster. Defaults to Docker if unset.
; Default:
;   fuzz.in-cluster = false
; Example:
;   fuzz.in-cluster = true

; Kubernetes namespace to use (used when --in-cluster is set).
; Default:
;   fuzz.namespace = default
; Example:
;   fuzz.namespace = go-continuous-fuzz-ns
